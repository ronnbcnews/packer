#version=RHEL7
# Install OS instead of upgrade
install

# Install from an installation tree on a remote server 
# Required when using a minimal ISO
#get yum repos
%include /tmp/os.inc

text
%include /tmp/ks_state.cfg

#add users
%include /tmp/user.cfg

# System keyboard
keyboard us

#dont install x windows
skipx

# System language
lang en_US.UTF-8

# Setup network interfaces via DHCP
network --device=eth0 --bootproto=dhcp --onboot=yes

%include /tmp/root_password.cfg
%include /tmp/firewall.cfg
authconfig --enableshadow --passalgo=sha512
firstboot --disabled

# SELinux configuration
# By default, selinux is enforcing
#selinux --enforcing
selinux --permissive

# Services
#services --enabled=ntpd,ntpdate
%include /tmp/services.cfg

# Installation logging level
logging --level=debug

# System timezone
timezone  Etc/UTC

# System bootloader configuration
bootloader --location=mbr --driveorder=sda --append="console=hvc0 crashkernel=auto vconsole.font=latarcyrheb-sun16 LANG=en_US.UTF-8 console=tty0 rootdelay=10 net.ifnames=0 selinux=0 elevator=noop divider=10"

# Clear the Master Boot Record
zerombr

# Automatically create partitions, no LVM
#autopart --nolvm
%include /tmp/disk.cfg

# Partition clearing information
clearpart --all --initlabel

# System bootloader configuration
#bootloader --location=mbr --boot-drive=sda
# Partition clearing information
#clearpart --none --initlabel
# Disk partitioning information
#part pv.20 --fstype="lvmpv" --ondisk=sda --size=19979
#part /boot --fstype="xfs" --ondisk=sda --size=500
#volgroup centos --pesize=4096 pv.20
#logvol /  --fstype="xfs" --grow --maxsize=51200 --size=1024 --name=root --vgname=centos
#logvol swap  --fstype="swap" --size=2048 --name=swap01 --vgname=centos

%include /tmp/packages.cfg
#this ends packages

%pre
#!/bin/bash
#dynamically generate yum repos base on kernel vers
KERN_VERS=$(uname -r)
BASEHOST="mirror.centos.org"
BASEURL="http://${BASEHOST}/centos/"

#mount cdrom to get configs
ISODIR=/tmp/boot_image
mkdir ${ISODIR}
mount -o loop,ro /dev/cdrom ${ISODIR}


#generate os repo for installs
case "$KERN_VERS" in

    3.10.0-327.*)
    OSVERS=7.2.1511
        echo "Found CentOS 7.2"
        echo BASEURL=${BASEURL} >> /tmp/os.vars
        echo OSVERS=${OSVERS} >> /tmp/os.vars
        echo url --url=${BASEURL}/${OSVERS}/os/x86_64/ >> /tmp/os.inc
        echo repo --name="updates" --baseurl=${BASEURL}/${OSVERS}/updates/x86_64/ >> /tmp/os.inc
        echo "%packages --nobase --nocore"  | tee /tmp/packages.cfg
        ;;&
    3.10.0-229.*)
    OSVERS=7.1.1503
        echo "Found CentOS 7.1"
        echo BASEURL=${BASEURL} >> /tmp/os.vars
        echo OSVERS=${OSVERS} >> /tmp/os.vars
        echo url --url=${BASEURL}/${OSVERS}/os/x86_64/ >> /tmp/os.inc
        echo repo --name="updates" --baseurl=${BASEURL}/${OSVERS}/updates/x86_64/ >> /tmp/os.inc
        echo "%packages --nobase"  | tee /tmp/packages.cfg
        ;;&
    3.10.0-123.*)
    OSVERS=7.0.1406
    BASEHOST="vault.centos.org"
    BASEURL="http://${BASEHOST}/centos/"

        echo "Found CentOS 7.0"
        echo BASEURL=${BASEURL} >> /tmp/os.vars
        echo OSVERS=${OSVERS} >> /tmp/os.vars
        echo url --url=${BASEURL}/${OSVERS}/os/x86_64/ | tee /tmp/os.inc
        echo repo --name="updates" --baseurl=${BASEURL}/${OSVERS}/updates/x86_64/ | tee -a /tmp/os.inc
        echo repo --name="extras" --baseurl=${BASEURL}/${OSVERS}/extras/x86_64/ | tee -a /tmp/os.inc
        echo "%packages --nobase"  | tee /tmp/packages.cfg
        ;;&
    3.10*)
    echo repo --name=prodpuppet --baseurl=http://yum.puppetlabs.com/el/7Server/products/x86_64/ --cost=2 \
     | tee -a /tmp/os.inc
    echo repo --name=deppuppet --baseurl=http://yum.puppetlabs.com/el/7Server/dependencies/x86_64/ --cost=2 \
     | tee -a /tmp/os.inc
    echo repo --name=EPEL --baseurl=https://dl.fedoraproject.org/pub/epel/7/x86_64/ --cost=100 \
     --excludepkgs=hiera,puppet | tee -a /tmp/os.inc
    cat ${ISODIR}/configs/ks_os_7_packages.cfg |tee -a /tmp/packages.cfg
    cat ${ISODIR}/configs/ks_os_7_disk.cfg |tee /tmp/disk.cfg
        ;;&
    2.6.32*)
    OSVERS=6.7
        echo "Found CentOS 6.7"
        echo BASEURL=${BASEURL} >> /tmp/os.vars
        echo OSVERS=${OSVERS} >> /tmp/os.vars
        echo url --url=${BASEURL}/${OSVERS}/os/x86_64/ | tee /tmp/os.inc
        echo repo --name="updates" --baseurl=${BASEURL}/${OSVERS}/updates/x86_64/ | tee -a /tmp/os.inc
        echo repo --name="extras" --baseurl=${BASEURL}/${OSVERS}/extras/x86_64/ | tee -a /tmp/os.inc
        echo repo --name="EPEL" --cost=100 --baseurl=https://dl.fedoraproject.org/pub/epel/6/x86_64/ \
        --excludepkgs=hiera,puppet | tee -a /tmp/os.inc
        echo repo --name="puppetprod" --cost=99 --baseurl=http://yum.puppetlabs.com/el/6Server/products/x86_64/ \
        | tee -a /tmp/os.inc
        echo repo --name="puppetdep" --cost=99 --baseurl=http://yum.puppetlabs.com/el/6Server/dependencies/x86_64/ \
        tee -a /tmp/os.inc
        cat ${ISODIR}/configs/ks_os_6_disk.cfg |tee /tmp/disk.cfg
        echo "%packages --nobase"  | tee /tmp/packages.cfg
        ;;
    esac

if [ -d ${ISODIR}/configs ]; then
echo "Found KSCFG dir"

    cat ${ISODIR}/configs/ks_os_postinstall.cfg |tee /tmp/postinstall.cfg
    cat ${ISODIR}/configs/ks_os_packages.cfg |tee -a /tmp/packages.cfg

    grep -q vagrantinstall /proc/cmdline
    if [ $? == "0" ]; then
        cat ${ISODIR}/configs/ks_vagrant_packages.cfg |tee -a /tmp/packages.cfg
        cat ${ISODIR}/configs/ks_vagrant_password.cfg |tee -a /tmp/root_password.cfg
        cat ${ISODIR}/configs/ks_vagrant_postinstall.cfg |tee -a /tmp/postinstall.cfg
        cat ${ISODIR}/configs/ks_vagrant_state.cfg |tee /tmp/ks_state.cfg
        cat ${ISODIR}/configs/ks_vagrant_firewall.cfg |tee /tmp/firewall.cfg
        cat ${ISODIR}/configs/ks_vagrant_services.cfg |tee /tmp/services.cfg
        cat ${ISODIR}/configs/ks_vagrant_user.cfg |tee /tmp/user.cfg
    else
        cat ${ISODIR}/configs/ks_os_password.cfg |tee -a /tmp/root_password.cfg
        cat ${ISODIR}/configs/ks_os_state.cfg |tee /tmp/ks_state.cfg
        cat ${ISODIR}/configs/ks_os_firewall.cfg |tee /tmp/firewall.cfg
        cat ${ISODIR}/configs/ks_os_services.cfg |tee /tmp/services.cfg
        cat ${ISODIR}/configs/ks_os_user.cfg |tee /tmp/user.cfg
    fi
    echo "%end" | tee -a /tmp/packages.cfg

fi

%end

%include /tmp/postinstall.cfg
